import 'package:flutter/foundation.dart';
import 'api_inegration.dart';
import 'database_setup.dart';
import 'package:connectivity/connectivity.dart';
import 'model_class.dart';

/*class IconProvider extends ChangeNotifier {
  final ApiService _apiService = ApiService();

  bool _hasInternetConnection = true;

  bool get hasInternetConnection => _hasInternetConnection;

  List<Autogenerated> _icons = [];

  List<Autogenerated> get icons => _icons;

  String _selectedCategory = '';

  String get selectedCategory => _selectedCategory;

  bool _isLoading = false;

  bool get isLoading => _isLoading;

  Future<void> fetchIcons() async {
    try {
      _isLoading = true;
      notifyListeners();

      final databaseIcons = await DatabaseHelper.getIcons();
      if (databaseIcons.isNotEmpty) {
        _icons = databaseIcons;
        _isLoading = false;
        notifyListeners();
      } else {
        _icons = await _apiService.fetchIcons();
        _isLoading = false;
        notifyListeners();

        // Save fetched icons to database
        for (var icon in _icons) {
          await DatabaseHelper.insertIcon(icon);
        }
      }
    } catch (e) {
      _isLoading = false;
      print("Error fetching icons: $e");
      notifyListeners();
    }
  }


  void setSelectedCategory(String category) {
    _selectedCategory = category;
    notifyListeners();
  }

  Future<void> checkInternetConnection() async {
    final connectivityResult = await (Connectivity().checkConnectivity());
    _hasInternetConnection = connectivityResult != ConnectivityResult.none;
    notifyListeners();
  }
}*/


class IconProvider extends ChangeNotifier {
  final ApiService _apiService = ApiService();

  bool _hasInternetConnection = true;

  bool get hasInternetConnection => _hasInternetConnection;

  List<IconModel> _icons = [];

  List<IconModel> get icons => _icons;

  String _selectedCategory = '';

  String get selectedCategory => _selectedCategory;

  bool _isLoading = false;

  bool get isLoading => _isLoading;

  Future<void> fetchIcons() async {
    try {
      _isLoading = true;
      notifyListeners();
      print('Icon $_icons');

      final connectivityResult = await (Connectivity().checkConnectivity());

      if (connectivityResult != ConnectivityResult.none) {
        // There is internet connection, fetch icons from API and save to database
        _icons = await _apiService.fetchIcons();
        for (var icon in _icons) {
          await DatabaseHelper.insertIcon(icon);
        }
      } else {
        // No internet connection, fetch icons from database
        _icons = await DatabaseHelper.getIcons();
      }

      _isLoading = false;
      notifyListeners();
    } catch (e) {
      _isLoading = false;
      print("Error fetching icons: $e");
      notifyListeners();
    }
  }

  void setSelectedCategory(String category) {
    _selectedCategory = category;
    notifyListeners();
  }

  Future<void> checkInternetConnection() async {
    final connectivityResult = await (Connectivity().checkConnectivity());
    _hasInternetConnection = connectivityResult != ConnectivityResult.none;
    notifyListeners();
  }
}